#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WMSPlugIn.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mrp")]
	public partial class MrpDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertData_Inventory(Data_Inventory instance);
    partial void UpdateData_Inventory(Data_Inventory instance);
    partial void DeleteData_Inventory(Data_Inventory instance);
    partial void InsertSys_Plugin(Sys_Plugin instance);
    partial void UpdateSys_Plugin(Sys_Plugin instance);
    partial void DeleteSys_Plugin(Sys_Plugin instance);
    partial void InsertPlugin_WMS_Setting(Plugin_WMS_Setting instance);
    partial void UpdatePlugin_WMS_Setting(Plugin_WMS_Setting instance);
    partial void DeletePlugin_WMS_Setting(Plugin_WMS_Setting instance);
    #endregion
		
		public MrpDataClassesDataContext() : 
				base(global::WMSPlugIn.Properties.Settings.Default.MrpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MrpDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrpDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrpDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MrpDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Data_Inventory> Data_Inventory
		{
			get
			{
				return this.GetTable<Data_Inventory>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Plugin> Sys_Plugin
		{
			get
			{
				return this.GetTable<Sys_Plugin>();
			}
		}
		
		public System.Data.Linq.Table<Plugin_WMS_Setting> Plugin_WMS_Setting
		{
			get
			{
				return this.GetTable<Plugin_WMS_Setting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Data_Inventory")]
	public partial class Data_Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _partId;
		
		private string _uom;
		
		private System.DateTime _FIFO;
		
		private System.DateTime _expireDate;
		
		private double _quantity;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpartIdChanging(string value);
    partial void OnpartIdChanged();
    partial void OnuomChanging(string value);
    partial void OnuomChanged();
    partial void OnFIFOChanging(System.DateTime value);
    partial void OnFIFOChanged();
    partial void OnexpireDateChanging(System.DateTime value);
    partial void OnexpireDateChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    #endregion
		
		public Data_Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string partId
		{
			get
			{
				return this._partId;
			}
			set
			{
				if ((this._partId != value))
				{
					this.OnpartIdChanging(value);
					this.SendPropertyChanging();
					this._partId = value;
					this.SendPropertyChanged("partId");
					this.OnpartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string uom
		{
			get
			{
				return this._uom;
			}
			set
			{
				if ((this._uom != value))
				{
					this.OnuomChanging(value);
					this.SendPropertyChanging();
					this._uom = value;
					this.SendPropertyChanged("uom");
					this.OnuomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIFO", DbType="Date NOT NULL")]
		public System.DateTime FIFO
		{
			get
			{
				return this._FIFO;
			}
			set
			{
				if ((this._FIFO != value))
				{
					this.OnFIFOChanging(value);
					this.SendPropertyChanging();
					this._FIFO = value;
					this.SendPropertyChanged("FIFO");
					this.OnFIFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireDate", DbType="Date NOT NULL")]
		public System.DateTime expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Plugin")]
	public partial class Sys_Plugin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _pluginType;
		
		private string _assemblyFile;
		
		private string _type;
		
		private string _method;
		
		private System.Nullable<int> _seq;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpluginTypeChanging(string value);
    partial void OnpluginTypeChanged();
    partial void OnassemblyFileChanging(string value);
    partial void OnassemblyFileChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnmethodChanging(string value);
    partial void OnmethodChanged();
    partial void OnseqChanging(System.Nullable<int> value);
    partial void OnseqChanged();
    #endregion
		
		public Sys_Plugin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pluginType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pluginType
		{
			get
			{
				return this._pluginType;
			}
			set
			{
				if ((this._pluginType != value))
				{
					this.OnpluginTypeChanging(value);
					this.SendPropertyChanging();
					this._pluginType = value;
					this.SendPropertyChanged("pluginType");
					this.OnpluginTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyFile", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string assemblyFile
		{
			get
			{
				return this._assemblyFile;
			}
			set
			{
				if ((this._assemblyFile != value))
				{
					this.OnassemblyFileChanging(value);
					this.SendPropertyChanging();
					this._assemblyFile = value;
					this.SendPropertyChanged("assemblyFile");
					this.OnassemblyFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq", DbType="Int")]
		public System.Nullable<int> seq
		{
			get
			{
				return this._seq;
			}
			set
			{
				if ((this._seq != value))
				{
					this.OnseqChanging(value);
					this.SendPropertyChanging();
					this._seq = value;
					this.SendPropertyChanged("seq");
					this.OnseqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plugin_WMS_Setting")]
	public partial class Plugin_WMS_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _host;
		
		private string _inventoyApi;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnhostChanging(string value);
    partial void OnhostChanged();
    partial void OninventoyApiChanging(string value);
    partial void OninventoyApiChanged();
    #endregion
		
		public Plugin_WMS_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host", DbType="VarChar(50)")]
		public string host
		{
			get
			{
				return this._host;
			}
			set
			{
				if ((this._host != value))
				{
					this.OnhostChanging(value);
					this.SendPropertyChanging();
					this._host = value;
					this.SendPropertyChanged("host");
					this.OnhostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoyApi", DbType="VarChar(50)")]
		public string inventoyApi
		{
			get
			{
				return this._inventoyApi;
			}
			set
			{
				if ((this._inventoyApi != value))
				{
					this.OninventoyApiChanging(value);
					this.SendPropertyChanging();
					this._inventoyApi = value;
					this.SendPropertyChanged("inventoyApi");
					this.OninventoyApiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
